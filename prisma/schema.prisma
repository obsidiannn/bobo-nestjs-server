// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

//  系统用户
model OfficalUser {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @map("name")
  avatar    String   @map("avatar")
  desc      String   @map("desc") //应用描述
  status    Int      @default(1) @map("status") //应用状态 1-正常 2-禁用
  createdAt DateTime @default(now()) @map("created_at") //创建时间
  updatedAt DateTime @updatedAt @map("updated_at") //更新时间

  @@map("offical_users")
}

// 用户表
model User {
  id        String   @id @map("_id") //用户ID，现在是用户的地址作为唯一id
  unionId   String   @map("union_id") //用户对外展示ID 为空默认生成
  avatar    String   @map("avatar") //头像 为空默认生成
  name      String   @map("name") //昵称 为空默认生成
  nameIdx   String   @map("name_idx") // 首字母或拼音
  gender    Int      @default(0) @map("gender") // 性别 0-未知 1-男 2-女
  sign      String?  @map("sign") // 个性签名
  pubKey    String   @unique @map("pub_key") // 公钥
  status    Int      @default(1) @map("status") // 状态 1-正常 2-被禁用 默认1
  dbIdx     Int      @map("db_idx") // 消息指定存储表
  createdAt DateTime @default(now()) @map("created_at") // 创建时间
  updatedAt DateTime @updatedAt @map("updated_at") // 更新时间

  @@index([unionId], name: "union_id")
  @@map("users")
}

//拉黑表
model Blacklist {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId //主键ID md5_16(uid+obj_uid)
  uid       String   @map("uid") //用户ID
  objUid    String   @map("obj_uid") //被拉黑的用户ID
  createdAt DateTime @default(now()) @map("create_time") //创建时间
  updatedAt DateTime @updatedAt @map("update_time") //更新时间

  @@index([uid], name: "uid")
  @@index([objUid], name: "obj_uid")
  @@map("black_list")
}

// 好友表
model Friend {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId //主键ID
  uid         String    @map("uid") //用户ID
  objUid      String    @map("obj_uid") //好友的ID
  agreeAt     DateTime? @map("agree_at") //同意时间
  remark      String?   @map("remark") //好友备注
  remarkIndex String?   @map("remark_index") //首字母或拼音
  createdAt   DateTime  @default(now()) @map("created_at") //创建时间
  updatedAt   DateTime  @updatedAt @map("updated_at") //更新时间
  status      Int       @map("status") // 状态 1 正常，2 拉黑 
  
  @@index([uid], name: "uid")
  @@index([objUid], name: "obj_uid")
  @@map("friends")
}

// 好友申请表
model FriendApply {
  id        String   @id @default(auto())  @map("_id") @db.ObjectId  //主键ID
  uid       String   @map("uid") //申请的用户ID
  objUid    String   @map("obj_uid") //被申请的用户ID
  status    Int      @default(0) @map("status") // 状态 0-待验证 1-验证通过
  isRead    Int      @default(0) @map("is_read") // 是否已读 0-未读 1-已读
  remark    String?  @map("remark") //申请说明、备注
  rejectReason String? @map("reject_reason")
  createdAt DateTime @default(now()) @map("created_at") //申请时间
  expiredAt DateTime @map("expired_at") //过期时间
  updatedAt DateTime @updatedAt @map("updated_at") //更新时间

  @@index([uid], name: "uid")
  @@index([objUid], name: "obj_uid")
  @@map("friend_applies")
}

// 群详情表
model Group {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId //主键ID，也为群ID
  creatorId   String   @map("creator_id") //创建者
  ownerId     String   @map("owner_id") //群主
  name        String   @map("name") //群名称 为空默认生成
  pubKey      String   @map("pub_key") //群公钥
  notice      String?  @map("notice") //群公告
  noticeMd5   String?  @map("notice_md5") //公告字符串md5加密 判定是否有更新
  desc        String?  @map("desc") //群描述
  descMd5     String?  @map("desc_md5") //群描述字符串md5加密 判定是否有更新
  avatar      String   @map("avatar") //群头像 为空默认生成
  cover       String   @map("cover") //群封面
  isEnc       Int      @default(0) @map("is_enc") // 是否加密 1-是 0-否 默认0
  type        Int      @default(1) @map("type") // 群类型 1-普通 2-付费（时效） 消息不可发送，但是可以加入 3-私密 只能被邀请，不能被搜索
  banType     Int      @default(1) @map("ban_type") // 禁言类型 1-不禁言 2-全员禁言 3-仅管理员可发言 4-仅群主可发言
  searchType  Int      @default(1) @map("search_type") // 搜索类型 1-允许被搜索 2-不允许被搜索
  status      Int      @default(1) @map("status") // 群状态 1-正常 2-禁用
  total       Int      @default(1) @map("total") // 当前总人数
  memberLimit Int      @default(100) @map("member_limit") //限制个数 默认100-待定也可根据配置
  // 搜索权重值
  weight      Int      @default(0) @map("weight") //搜索权重值
  createdAt   DateTime @default(now()) @map("created_at") //创建时间
  updatedAt   DateTime @updatedAt @map("updated_at") //更新时间
  tags        String[] @map("tags")

  @@map("groups")
}

// 群统计表 统计值
model GroupStat {
  id        String   @id @map("_id") //主键ID
  groupId   String   @map("gid") //群ID
  total     Int      @default(0) @map("total") //群总人数
  msgTotal  Int      @default(0) @map("msg_total") //群消息总数
  msgDay    Int      @default(0) @map("msg_day") //群消息当日总数
  activeDay Int      @default(0) @map("active_day") //群当日活跃人数
  joinDay   Int      @default(0) @map("join_day") // 群新增人数
  leaveDay  Int      @default(0) @map("leave_day") // 群减少人数
  incomeDay Int      @default(0) @map("income_day") //群当日收益
  dateValue String   @map("date_value") // 统计日期，yyyy-mm-dd
  createdAt DateTime @default(now()) @map("created_at") //创建时间
  updatedAt DateTime @updatedAt @map("updated_at") //更新时间

  @@index([groupId], name: "gid")
  @@index([dateValue], name: "date_value")
  @@map("group_stat")
}

// 群订阅套餐表 废弃
model GroupPackage {
  id        String   @id @map("_id") //主键ID
  groupId   String   @map("gid") //群ID
  name      String   @map("name") //套餐名称
  desc      String   @map("desc") //套餐描述
  price     Int      @map("price") //套餐价格 单位为分
  duration  Int      @map("duration") //套餐时长 单位为天
  status    Int      @default(1) @map("status") //套餐状态 1-正常 2-禁用
  billId    String   @map("bill_id")
  createdAt DateTime @default(now()) @map("created_at") //创建时间
  updatedAt DateTime @updatedAt @map("updated_at") //更新时间

  @@index([groupId], name: "gid")
  @@map("group_packages")
}


// 群用户表申请表
model GroupApply {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId //主键ID
  groupId          String    @map("gid") //群ID
  uid              String    @map("uid") //用户ID
  encPri           String    @map("enc_pri") //用户在该群的密钥 只有群主及管理具备
  encKey           String    @map("enc_key") //用户在该群的加密key
  inviteUid        String?   @map("invite_uid") //邀请者ID 没有则为主动加入
  role             Int       @default(3) @map("role") //角色 1-群主 2-管理员 3-普通用户 默认普通用户
  joinType         Int       @map("join_type") //加入方式 1-邀请 2-扫码 （枚举待定）
  myAlias          String    @map("my_alias") //在群里的昵称
  status           Int       @default(1) @map("status") //用户状态 0 pending 1-正常
  banType          Int       @default(1) @map("ban_type") // 禁言类型  1-正常 2-禁言
  adminAt          DateTime? @map("admin_at") //成为管理员的时间
  packageExpiredAt DateTime? @map("package_expired_at") // 群订阅过期时间
  createdAt        DateTime  @default(now()) @map("created_at") //创建时间
  updatedAt        DateTime  @updatedAt @map("updated_at") //更新时间

  @@index([groupId], name: "gid")
  @@index([uid], name: "uid")
  @@map("group_applys")
}

// 群用户表
model GroupMembers {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId //主键ID
  groupId          String    @map("gid") //群ID
  uid              String    @map("uid") //用户ID
  encPri           String    @map("enc_pri") //用户在该群的密钥 只有群主及管理具备
  encKey           String    @map("enc_key") //用户在该群的加密key
  inviteUid        String?   @map("invite_uid") //邀请者ID 没有则为主动加入
  role             Int       @default(3) @map("role") //角色 1-群主 2-管理员 3-普通用户 默认普通用户
  joinType         Int       @map("join_type") //加入方式 1-邀请 2-扫码 （枚举待定）
  myAlias          String?    @map("my_alias") //在群里的昵称
  aliasIdx         String?    @map("alias_idx") // 群昵称首字母
  status           Int       @default(1) @map("status") //用户状态 0 pending 1-正常
  banType          Int       @default(1) @map("ban_type") // 禁言类型  1-正常 2-禁言
  adminAt          DateTime? @map("admin_at") //成为管理员的时间
  packageExpiredAt DateTime? @map("package_expired_at") // 群订阅过期时间
  createdAt        DateTime  @default(now()) @map("created_at") //创建时间
  updatedAt        DateTime  @updatedAt @map("updated_at") //更新时间
  remark           String?  @map("remark") // 申请备注

  @@index([groupId], name: "gid")
  @@index([uid], name: "uid")
  @@map("group_members")
}

// 群应用表 （如果应用是共享的，表需要设计成关联形式）
model GroupApp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  groupId   String   @map("gid") //群ID
  appId     String   @map("app_id") //应用ID
  createdAt DateTime @default(now()) @map("created_at") //创建时间
  updatedAt DateTime @updatedAt @map("updated_at") //更新时间

  @@index([groupId], name: "gid")
  @@index([appId], name: "app_id")
  @@map("group_apps")
}

//会话表
model Chat {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId // 主键ID 及会话ID
  groupId          String?   @map("gid") // 群ID
  userIds          String[]   @map("uids")
  creatorUId       String    @map("creator_uid") // 创建者 下面几个字段按道理是从群信息里面读取（个人意见）
  type             Int       @default(1) @map("type") // 1-单聊 2-群聊 3 官方会话
  status           Int       @map("status") //状态 1-正常 2-禁用
  isEnc            Int       @default(0) @map("is_enc") // 是否加密 1-是 0-否 默认0
  lastReadSequence Int       @map("last_read_sequence")
  lastSequence     Int       @map("last_sequence")
  lastTime         DateTime? @map("last_time")
  createdAt        DateTime  @default(now()) @map("created_at") // 创建时间
  updatedAt        DateTime  @updatedAt @map("updated_at") // 创建时间

  @@map("chats")
}

// 用户会话表
model ChatUser {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId //主键ID
  uid            String   @map("uid") //用户ID
  chatId         String   @map("chat_id") //会话ID
  isTop          Int      @default(0) @map("is_top") //是否置顶 1-是 0-否 默认0
  isMute         Int      @default(0) @map("is_mute") // 是否免打扰 1-是 0-否 默认0 
  isShow         Int      @default(1) @map("is_show") //是否显示 1-是 0-否 默认1
  isHide         Int      @default(0) @map("is_hide") //是否隐藏 1-是 0-否 默认0
  maxReadSeq     Int      @default(0) @map("max_read_seq") // 最大读取的消息序号，个人建议用用户的dbIdx表存储
  lastOnlineTime DateTime @map("last_online_time") // 最后一次在线时间
  createdAt      DateTime @default(now()) @map("created_at") //创建时间
  updatedAt      DateTime @updatedAt @map("updated_at") //更新时间
  userRef        String   @map("user_ref") // 点对点的userId 索引，默认0

  @@index([uid], name: "uid")
  @@index([chatId], name: "chat_id")
  @@map("chat_user")
}

// 消息详情表
model MessageDetail {
  id         String   @id  @map("_id") @db.ObjectId //主键ID 及消息ID
  chatId     String   @map("chat_id") //会话ID
  fromUid    String   @map("from_uid") //发送者用户ID
  content    String   @map("content") //消息内容 加密字符串
  status     Int      @default(1) @map("status") // 状态 1-正常 0-全员删除 如果物理删除 0状态不需要
  type       Int      @map("type") // 1-普通消息 2-应用消息 等 （待定）
  isEnc      Int      @default(0) @map("is_enc") // 是否加密 1-是 0-否 默认0
  sequence   Int?     @map("sequence") // 消息序号
  receiveIds String[] @map("receive_ids") // 指定接收的用户Id
  extra      Json?     @map("extra") //内容外的额外信息
  action     Json?    @map("action") //消息的操作类型，有些操作可以通过消息做响应的通知操作 我的预留 不需要可删
  createdAt  DateTime @default(now()) @map("created_at") //创建时间
  updatedAt  DateTime @updatedAt @map("updated_at") //更新时间

  @@index([chatId], name: "chat_id")
  @@map("message_detail")
}

// 用户消息表
model UserMessage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId //主键ID
  uid       String   @map("uid") //用户ID
  msgId     String   @map("msg_id") //消息ID
  isRead    Int      @default(0) @map("is_read") //是否已读 1-是 0-否 默认0
  sequence  Int      @map("sequence") // 消息序号
  chatId    String   @map("chat_id") // chat id
  createdAt DateTime @default(now()) @map("created_at") //创建时间
  
  @@index([uid], name: "uid")
  @@index([msgId], name: "msg_id")
  @@map("user_messages")
}

// 系统分类
model SysCategory {
  id     String @id @default(auto()) @map("_id") @db.ObjectId //主键ID
  name   String @map("name")
  type   Int    @map("tag_type") // 1 app ,2 group ,3 user
  sort   Int    @map("sort")
  config Json?  @map("config")

  @@map("sys_category")
}

// 应用表
model App {
   id           String   @id @default(auto()) @map("_id") @db.ObjectId //主键ID
   name         String   @map("name") //应用名字
   icon         String   @map("icon") //应用icon
   desc         String   @map("desc") //应用描述
   url          String   @map("url") //应用连接
   detailImages String[] @map("detail_img") // 详情图片
   sort         Int      @map("sort") //应用排序
   status       Int      @default(1) @map("status") //应用状态 1-正常 2-禁用
   tags         Json[]   @map("tags")
   categoryIds  String[] @map("category_ids") // 关联分类
   author       String   @map("author") //应用作者
   activeAt     DateTime @map("active_at") // 上架时间
   avgStar      Float    @map("avg_star") // 应用平分
   installCount Int      @map("install_count") // 安装数量
   createdAt    DateTime @default(now()) @map("created_at") //创建时间
   updatedAt    DateTime @updatedAt @map("updated_at") //更新时间

  @@map("app")
}

// 应用添加记录
model AppInstallRecord {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  uid       String   @map("uid")
  appId     String   @map("app_id")
  groupId   String   @map("group_id")
  createdAt DateTime @default(now()) @map("created_at") //创建时间

  @@map("app_install_record")
}

// 应用评论记录
model AppComment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  uid       String   @map("uid")
  appId     String   @map("appId")
  star      Int      @map("star") // 评论点赞
  score     Int      @map("score")
  content   String   @map("content")
  createdAt DateTime @default(now()) @map("created_at") //创建时间

  @@map("app_comment")
}

// 应用评论点赞记录
model AppCommentVote {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  uid       String   @map("uid")
  commentId String   @map("comment_id")
  createdAt DateTime @default(now()) @map("created_at") //创建时间

  @@unique([uid, commentId], map: "unq_comment_uid")
  @@map("app_comment_vote")
}

// 投诉表
model Complaint {
  id        String   @id @map("_id") //主键ID
  uid       String   @map("uid") //投诉人ID
  type      Int      @map("type") //投诉类型 1-用户 2-群组
  targetId  String   @map("target_id") //投诉对象ID
  content   String   @map("content") //投诉内容
  status    Int      @default(0) @map("status") //投诉状态 0-待处理 1-已处理
  createdAt DateTime @default(now()) @map("created_at") //创建时间
  updatedAt DateTime @updatedAt @map("updated_at") //更新时间

  @@map("complaints")
}

// 钱包

model Wallet {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId //主键ID
  uid       String   @map("uid") //用户ID
  balance   Int      @default(0) @map("balance") //余额 以usdt为单位
  currency  Int      @map("currency") // 币种： utsd
  createdAt DateTime @default(now()) @map("created_at") //创建时间
  updatedAt DateTime @updatedAt @map("updated_at") //更新时间
  type      Int      @map("type") // 1 普通 2 系统钱包

  @@map("wallet")
}

// 账单
model Bill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId // 主键ID
  uid       String   @map("uid") // 用户ID
  type      Int      @map("type") // 账单类型 1-充值 2-提现 3-转账 4-红包 5-群收款 6-群退款 7-群提现 8-申请群付费
  amount    Int      @map("amount") // 金额
  inOut     Int      @map("in_out") // 1 收入 2 支出
  status    Int      @default(0) @map("status") //状态 0-待处理 1-已处理 （1 success，2 待支付,3 pending，4 失败）
  createdAt DateTime @default(now()) @map("created_at") //创建时间
  updatedAt DateTime @updatedAt @map("updated_at") //更新时间

  @@map("bill")
}

// 账单详情表
model BillDetail {
  billId        String      @id @map("_id") @db.ObjectId
  uid           String      @map("uid")
  from          String      @map("from") //
  to            String      @map("to") //
  businessId    String?     @map("business_id") // userId groupId systemUserId
  businessType  Int?        @map("business_type") // user group systemUser
  remark        String?     @map("remark") // 备注
  transactionNo String?     @map("transaction_no") // 交易单号
  sellerNo      String?     @map("seller_no") // 商户订单

  @@map("bill_detail")
}

// 充值码
model PrePaidCard {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId // 主键ID
  code       String   @map("code") // 礼包码
  status     Int      @map("status") // 状态： 1 可用，2 已使用
  amount      Int      @map("amount") // 面值（单位分）
  convertUid String?  @map("convert_uid") // 兑换人
  createdAt  DateTime @default(now()) @map("created_at") //创建时间
  updatedAt  DateTime @updatedAt @map("updated_at") //领取时间时间

  @@index([code], map: "code")
  @@map("pre_paid_card")
}

// 红包
model RedPacket {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId // 主键ID
  type            Int         @map("type")  // 类型 1 普通，2 拼手气 3 专属 RedPacketTypeEnum
  sourceType      Int         @map("source_type")  // 1 群聊 2 单聊 RedPacketSourceEnum
  totalAmount     Int         @map("total_amount") // 总金额
  remark          String      @map("remark")
  singleAmount    Int?         @map("single_amount") // 单个金额
  packetCount     Int         @map("packet_count") // 红包个数
  groupId         String?     @map("gid")
  objUids         String[]    @map("obj_uid") // 如果有指定人
  createdUid      String      @map("created_uid")  // 发起人
  status            Int       @map("status") // 1有效 2过期
  consumeCount      Int       @map("consume_count") // 领取数量
  consumeAmount     Int       @map("consume_amount") // 已领取金额
  expireSecond    Int         @map("expire_second") // 过期时间（秒）
  createdAt       DateTime    @default(now()) @map("created_at") //创建时间

  @@map("red_packet")
}

// 红包领取表 提前生成
model RedPacketRecord {
  id        String            @id @default(auto()) @map("_id") @db.ObjectId // 主键ID
  uid         String?         @map("uid") // 领取人
  packetId    String          @map("packet_id")
  amount      Int             @map("amount") // 领取金额 冗余
  billId      String?         @map("bill_id") // 关联账单id 开始为空
  status      Int             @map("status") // 1 待领取 2 已领取 3 过期 4 过期已退回
  recordAt    DateTime?       @map("record_at") // 领取时间
  createdAt       DateTime    @default(now()) @map("created_at") //创建时间

  @@index([packetId], name: "packet_id")
  @@map("red_packet_record")
}

// 探索模块 -------------------------
//  推文
model Post {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId // 主键ID
  authorId     String   @map("author_id")
  authorType   Int      @map("author_type") // 1 普通用户 2 系统用户
  medias       Json[]   @map("medias")
  content      String   @map("content")
  status       Int      @map("status") // 1 正常 2 封禁 3 锁定
  commentLevel Int      @map("comment_level") //预留 是否可回复: 1 每个人，2 好友 3 不可回复
  visibleType  Int      @map("visible_type") //可见性 1 公开 2 好友 3 自己
  longitude    Float?   @map("longitude") // 经度
  latitude     Float?   @map("latitude") // 纬度
  address      String?  @map("address") // 文本
  retweetId    String?   @map("retweet_id") // 转帖id
  retweetType  Int      @map("retweet_type") // 转帖类型 1 推文，2 评论
  createdAt    DateTime @default(now()) @map("created_at") //创建时间
  postIndex    PostIndex? 
  @@map("posts")
}


// 推文索引表
model PostIndex {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId 
  randomSort   Int      @map("random_sort") // 随机数
  overall      Float    @map("overall") // 综合分数
  voteCount    Int      @map("vote_count") // 喜欢数量
  commentCount Int      @map("comment_count") // 评论数量
  retweetCount Int      @map("retweet_count") // 转帖数量
  readCount    Int      @map("read_count") // 阅读量
  redditValue  Int      @map("reddit_value") // reddit分值
  status       Int      @map("status")
  visibleType  Int      @map("visible_type") // 可见性 1 公开 2 好友 3 自己 冗余
  retweetId    String?  @map("retweet_id") // 转帖id 冗余
  retweetType  Int      @map("retweet_type") // 转帖类型  冗余
  parentId     String?  @map("parent_id")
  createdAt    DateTime @default(now()) @map("created_at") //创建时间
  tweetId      String   @map("tweet_id")  @unique @db.ObjectId
  post         Post     @relation(fields: [tweetId], references: [id])

  @@map("post_tweet_index")
}

// 推文统计表
model PostStat {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId // 主键ID
  tweetId        String   @map("tweet_id") @db.ObjectId
  dateBucket   String   @map("date_bucket") // yyyyMMdd
  overall      Float    @map("overall") // 综合分数
  voteCount    Int      @map("vote_count") // 喜欢数量
  commentCount Int      @map("comment_count") // 评论数量
  readCount    Int      @map("read_count") // 阅读量
  redditValue  Int      @map("reddit_value") // reddit分值
  createdAt    DateTime @default(now()) @map("created_at") //创建时间
  @@index([tweetId, dateBucket])
  @@map("post_tweet_stat")
}

// 计算vote可以采取 定时值 +-自己的方式
model PostVote {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  tweetId   String   @map("tweet_id") @db.ObjectId
  uid       String   @map("uid")
  createdAt DateTime @default(now()) @map("created_at") //创建时间

  @@index([tweetId, uid])
  @@map("post_tweet_vote")
}

// 计算vote可以采取 定时值 +-自己的方式
model PostRetweet {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  tweetId   String   @map("tweet_id") @db.ObjectId
  uid       String   @map("uid")
  createdAt DateTime @default(now()) @map("created_at") //创建时间


  @@index([tweetId, uid])
  @@map("post_retweet")
}
